parameters:
- name: stageName
  default: ''

- name: environmentName
  default: ''

- name: variableGroupName
  default: ''

- name: serviceConnection
  default: ''

stages:
  - stage: ${{ parameters.stageName }}
    displayName: ${{ parameters.stageName }}

    jobs:
    - deployment: Deploy
      displayName: Deploy
      environment: ${{ parameters.environmentName }}
      variables:
      - group: ${{ parameters.variableGroupName }}
      pool:
        vmImage: windows-latest
      strategy:
        runOnce:
          deploy:
            steps:
            - download: current
              artifact: webApp
              displayName: Downlaod web app artifact
            
            - download: current
              artifact: infrastructure
              displayName: Download infrastructure artifact
            
            - task: AzureCLI@2
              displayName: Deploy infrastructure
              inputs:
                azureSubscription: ${{ parameters.serviceConnection }}
                scriptType: ps
                scriptLocation: inlineScript
                inlineScript: |
                  $date = Get-Date
                  $deploymentNameSuffix = $date.ToString("yyyy-MM-dd-hh-mm-ss")
                  $deploymentName = "main-${deploymentNameSuffix}"
                  
                  az deployment group create -g $(resourceGroupName) -n $deploymentName --template-file $(Pipeline.Workspace)/infrastructure/maintemplate.json --parameters deploymentNameSuffix=$deploymentNameSuffix reportRequestQueueName=$(reportRequestQueueName) reportingStorageAccountName=$(reportingStorageAccountName) appServiceName=$(appServiceName) appServiceSkuName=$(appServiceSkuName) appServiceSkuCapacity=$(appServiceSkuCapacity) keyVaultName=$(keyVaultName) accessPolicyTargetObjectId=$(accessPolicyTargetObjectId) logAnalticsWorkspaceName=$(logAnalticsWorkspaceName) appInsightsName=$(appInsightsName) functionAppName=$(functionAppName) functionAppAppInsightsName=$(functionAppAppInsightsName) functionAppStorageAccountName=$(functionAppStorageAccountName)
            
            - task: AzureRmWebAppDeployment@4
              displayName: 'Deploy web app'
              inputs:
                ConnectionType: 'AzureRM'
                azureSubscription: ${{ parameters.serviceConnection }}
                appType: 'webApp'
                WebAppName: $(appServiceName)
                Package: '$(Pipeline.Workspace)/webApp/GovtReportingDemo.zip'
